//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseGrant) DeepCopyInto(out *DatabaseGrant) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseGrant.
func (in *DatabaseGrant) DeepCopy() *DatabaseGrant {
	if in == nil {
		return nil
	}
	out := new(DatabaseGrant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseGrant) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseGrantInitParameters) DeepCopyInto(out *DatabaseGrantInitParameters) {
	*out = *in
	if in.EnableMultipleGrants != nil {
		in, out := &in.EnableMultipleGrants, &out.EnableMultipleGrants
		*out = new(bool)
		**out = **in
	}
	if in.Privilege != nil {
		in, out := &in.Privilege, &out.Privilege
		*out = new(string)
		**out = **in
	}
	if in.RevertOwnershipToRoleName != nil {
		in, out := &in.RevertOwnershipToRoleName, &out.RevertOwnershipToRoleName
		*out = new(string)
		**out = **in
	}
	if in.WithGrantOption != nil {
		in, out := &in.WithGrantOption, &out.WithGrantOption
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseGrantInitParameters.
func (in *DatabaseGrantInitParameters) DeepCopy() *DatabaseGrantInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseGrantInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseGrantList) DeepCopyInto(out *DatabaseGrantList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseGrant, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseGrantList.
func (in *DatabaseGrantList) DeepCopy() *DatabaseGrantList {
	if in == nil {
		return nil
	}
	out := new(DatabaseGrantList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseGrantList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseGrantObservation) DeepCopyInto(out *DatabaseGrantObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.EnableMultipleGrants != nil {
		in, out := &in.EnableMultipleGrants, &out.EnableMultipleGrants
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Privilege != nil {
		in, out := &in.Privilege, &out.Privilege
		*out = new(string)
		**out = **in
	}
	if in.RevertOwnershipToRoleName != nil {
		in, out := &in.RevertOwnershipToRoleName, &out.RevertOwnershipToRoleName
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Shares != nil {
		in, out := &in.Shares, &out.Shares
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WithGrantOption != nil {
		in, out := &in.WithGrantOption, &out.WithGrantOption
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseGrantObservation.
func (in *DatabaseGrantObservation) DeepCopy() *DatabaseGrantObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseGrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseGrantParameters) DeepCopyInto(out *DatabaseGrantParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableMultipleGrants != nil {
		in, out := &in.EnableMultipleGrants, &out.EnableMultipleGrants
		*out = new(bool)
		**out = **in
	}
	if in.Privilege != nil {
		in, out := &in.Privilege, &out.Privilege
		*out = new(string)
		**out = **in
	}
	if in.RevertOwnershipToRoleName != nil {
		in, out := &in.RevertOwnershipToRoleName, &out.RevertOwnershipToRoleName
		*out = new(string)
		**out = **in
	}
	if in.RoleRefs != nil {
		in, out := &in.RoleRefs, &out.RoleRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleSelector != nil {
		in, out := &in.RoleSelector, &out.RoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShareRefs != nil {
		in, out := &in.ShareRefs, &out.ShareRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShareSelector != nil {
		in, out := &in.ShareSelector, &out.ShareSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Shares != nil {
		in, out := &in.Shares, &out.Shares
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WithGrantOption != nil {
		in, out := &in.WithGrantOption, &out.WithGrantOption
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseGrantParameters.
func (in *DatabaseGrantParameters) DeepCopy() *DatabaseGrantParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseGrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseGrantSpec) DeepCopyInto(out *DatabaseGrantSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseGrantSpec.
func (in *DatabaseGrantSpec) DeepCopy() *DatabaseGrantSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseGrantSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseGrantStatus) DeepCopyInto(out *DatabaseGrantStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseGrantStatus.
func (in *DatabaseGrantStatus) DeepCopy() *DatabaseGrantStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseGrantStatus)
	in.DeepCopyInto(out)
	return out
}
